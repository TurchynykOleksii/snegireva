@import "../core";

*,
*:before,
*:after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  outline: none;
  // Set global fonts here
}

ul,
ol {
  list-style-type: none;
}

a {
  text-decoration: none;
}

img {
  display: block;
  max-width: 100%;
  height: auto;
}

* {
  position: relative;
}

html {
  font-size: 10px;
  background-color: $bgAccent;
  scroll-behavior: smooth;
}

body {
  font-family: SfProRounded, sans-serif;
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  color: $colorText;

  &.menu-open {
    overflow: hidden;
    height: 100vh;
  }

  &.scroll-disable {
    height: 100vh;
    overflow: hidden;
  }
}

section {
  overflow: hidden;
  z-index: 1;
}

main {
  flex: 1;

  @include minw($sm-pc) {
    margin-top: 0;
  }
}


//===========================
// Helpers
//===========================

.container,
[class*="__container"] {
  margin: 0 auto;
  width: 100%;
  max-width: rem($maxWidthContainer);
  padding: 0 rem(calc($containerPadding/2));
}

.container-fuild {
  margin: 0 auto;
  width: 100%;
  max-width: rem($maxWidthContainer);
  padding: 0 rem(calc($containerPadding/2));
}

.container-small {
  margin: 0 auto;
  width: 100%;
  max-width: rem($smallWidthContainer);
  padding: 0 rem(calc($containerPadding/2));
}


.tac {
  text-align: center;
  margin: 0 auto;
}

.hidden {
  display: none !important;
  visibility: hidden !important;
}


//===========================
// Grids
//===========================

[class*="grid"]+[class*="grid"] {
  margin-top: rem($gridPadding);
}

.grid-2,
.grid-3,
.grid-4 {

  &>div,
  &>a {
    &:not(:first-child) {
      margin-top: rem($gridPadding);
    }

    @include minw($gridMinSize + px) {
      width: calc(50% - rem(calc($gridPadding/2)));

      &:nth-child(-n+2) {
        margin-top: 0;
      }
    }

  }

  @include minw($gridMinSize + px) {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
  }

}

@include minw($sm-pc) {

  .grid-3,
  .grid-4 {
    justify-content: flex-start;

    &>div,
    &>a {
      width: calc(33.33% - rem(calc($gridPadding/1.5)));

      &:nth-child(-n+3) {
        margin-top: 0;
      }

      &:not(:nth-child(3n+3)) {
        margin-right: rem($gridPadding);
      }
    }
  }
}

@include minw($pc) {
  .grid-4 {

    &>div,
    &>a {
      width: calc(25% - rem(calc($gridPadding/1.3333333333)));

      &:nth-child(-n+4) {
        margin-top: 0;
      }

      &:nth-child(4n+4) {
        margin-right: 0;
      }

      &:not(:nth-child(4n+4)) {
        margin-right: rem($gridPadding);
      }
    }
  }
}

.spacer {
  height: 1rem;
  display: block;
}

.bg {
  position: absolute;
  top: 0;
  z-index: -1;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;

  &:before,
  &:after {
    content: "";
    width: 100%;
    height: 100%;
    background: var(--bg-image) no-repeat center center;
    position: absolute;
    background-size: cover;
  }

  &:before {
    filter: blur(3rem);
    transform: scale(1.15);
  }

  &:after {
    max-width: 192rem;
  }

  div {
    width: 100%;
    height: 100%;
    z-index: 1;
    background: rgba(0, 0, 0, .4);
    background: linear-gradient(180deg, rgba(0, 0, 0, 0.3) 0%, rgba(0, 0, 0, 0.5) 100%);
  }

  &-top {

    &:before,
    &:after {
      background-position: top center;
    }
  }

  &-bottom {

    &:before,
    &:after {
      background-position: bottom center;
    }
  }
}

@include minw($sm-pc) {
  .flex-2 {
    display: flex;
    align-items: center;

    &>div {
      flex: 1;
    }
  }
}

.wrapper {
  padding: 0 5px;
  margin: 0 auto;
  max-width: 375px;
  width: 100%;

  @include minw($mob-custom) {
    max-width: $mob-custom;
  }

  @include minw($lg-custom) {
    max-width: $lg-custom;
    padding: 0 10px;
  }
}